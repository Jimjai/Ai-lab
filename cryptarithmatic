import itertools

def solve_cryptarithmetic_puzzle():
    letters = 'SENDMOREMONEY'
    unique_letters = set(letters)
    
    # Generate all permutations of digits 0-9 for the unique letters
    for perm in itertools.permutations('0123456789', len(unique_letters)):
        sol = dict(zip(unique_letters, perm))
        
        # Convert SEND, MORE, and MONEY using the mapped digits
        send = int(''.join(sol[l] for l in 'SEND'))
        more = int(''.join(sol[l] for l in 'MORE'))
        money = int(''.join(sol[l] for l in 'MONEY'))
        
        # Check if the sum is correct and the leading digits are non-zero
        if send + more == money:
            if sol['S'] != '0' and sol['M'] != '0':
                print(f"SEND: {send}, MORE: {more}, MONEY: {money}")
                return

solve_cryptarithmetic_puzzle()
